type UserSafe implements IUser {
	_id: ObjectID!
	name: String!
	email: String!

	avatar: String
	status: String

	provider: Provider
	auth: Authentication
	google: GoogleNetwork
	facebook: FacebookNetwork

	chats_id: [ObjectID!]
	contacts: [Contact!]

	createdAt: Date!
	dateLastOnline: Date

	isOnline: Boolean
	isOnlineMobile: Boolean
	isClosed: Boolean
	isVerified: Boolean
	isActivated: Boolean
	isLocked: Boolean
	isActive: Boolean
}

#TODO if necessary?
type User implements IUser {
	#backend only or client input
	password: Password
	#end unsafe

	_id: ObjectID!
	name: String!
	email: String!

	avatar: String
	status: String

	provider: Provider
	auth: Authentication
	google: GoogleNetwork
	facebook: FacebookNetwork

	chats_id: [ObjectID!]
	contacts: [Contact!]

	createdAt: Date!
	dateLastOnline: Date

	isOnline: Boolean
	isOnlineMobile: Boolean
	isClosed: Boolean
	isVerified: Boolean
	isActivated: Boolean
	isLocked: Boolean
	isActive: Boolean
}

type Query {
	User(id: ObjectID!): UserSafe
	UserCurrent: UserSafe
	UserUpdateOnline: String
}
